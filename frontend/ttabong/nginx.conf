user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] '
                    '"$request" $status $body_bytes_sent '
                    '"$http_referer" "$http_user_agent"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;


    sendfile        on;
    keepalive_timeout  65;

    upstream spring {
        server springdeploy:8080;  # ✅ 백엔드 컨테이너 (internal network)
    }


    server {
        listen 80;
        server_name _;

        # React 정적 파일 서빙
        location / {
            root /usr/share/nginx/html;  # 🔥 React 빌드된 파일을 제공
            index index.html;
            try_files $uri /index.html;
        }

        # 404 에러 페이지도 React의 index.html을 반환하여 SPA 라우팅 지원
        error_page 404 /index.html;

        # API 요청은 백엔드로 프록시
        location /api/ {
            proxy_pass http://springdeploy:8080;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
